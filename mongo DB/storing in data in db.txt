-storing in data in db ; by using  cmd

-in app.js ;

const express = require('express');
const bodyparser = require('body-parser');
const mongoose = require('mongoose');


const Post = require('./models/post');


const app = express();

mongoose.connect("mongodb+srv://zytn:Tth71Zo0srymvEdc@cluster4.bqvsfv1.mongodb.net/node-angular?retryWrites=true&w=majority")
.then(()=>{
    console.log('connected to database');
})
.catch(()=>{
    console.log('connection failed');


});


app.use(bodyparser.json());
app.use(bodyparser.urlencoded({extended: false}));



//core 

app.use((req,res,next)=>{

    //these are headers
    res.setHeader('Access-Control-Allow-Origin' , '*');
    //this means the incoming request may have these extra headers
    res.setHeader('Access-Control-Allow-Headers','Origin, X-Requested-With,Content-Type ,Accept');
    res.setHeader("Access-Control-Allow-Methods", 'GET, POST, PATCH, DELETE, OPTIONS');

    next();
});

// Tth71Zo0srymvEdc

//bodyparsÃªr

app.post("/api/posts",(req , res , next)=>{

    const post = new Post({
        title:req.body.title,
        content:req.body.content
    });

    post.save();
    console.log(post);

    res.status(201).json({
        message: "post added successfully"
    });

});


app.get("/api/posts",(req , res , next)=>{
    const posts = [
        {id:'fdsf2432',title:'first server side post' , content :'this is coming from the server'},
        {id:'fsfs1212',title:'second server side post' , content :'this is coming from the server!'},

    ];
    res.status(200).json({
        message: 'posts fetched successfully',
        posts:posts

    });

});

module.exports = app;